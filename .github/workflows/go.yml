name: ci 
on:
  push:
    branches:
      - master
  pull_request:
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created 

jobs:
  analysis:
    name: static analysis
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/pulsar-beam

      - name: Lint Go Code
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
          go get -u golang.org/x/lint/golint 
          cd src
          golint ./...

  build_test:
    name: build and test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/pulsar-beam
      - name: Install MongoDB
        run: |
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_EVENT_PATH
          sudo apt-get update
          sudo apt-get install -y mongodb
      - name: Verify MongoDB Installation and Status
        run: |
          ls /var/lib/mongodb
          sudo systemctl status mongodb
      - name: Install dependencies
        run: |
          pwd
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}
          wget --user-agent=Mozilla "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.4.1/DEB/apache-pulsar-client.deb"
          wget --user-agent=Mozilla "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.4.1/DEB/apache-pulsar-client-dev.deb"
          ls ./*apache-pulsar-client*.deb
          sudo apt install ./*apache-pulsar-client*.deb
          go mod download
      - name: Build Binary
        run: |
          cd src
          go build ./...
      - name: Go Vet
        run: |
          cd src
          go vet ./...
      - name: Run Tests
        run: |
          cd src/unit-test
          go test -v ./...
        env:
          GOPATH: /home/runner/work/pulsar-beam/go
      - name: Run Code Coverage
        run: |
          pwd
          cd ./scripts
          ./test_coverage.sh
        env:
          GOPATH: /home/runner/work/pulsar-beam/go

  e2e_test:
    name: e2e_test
    needs: [analysis, build_test]
    runs-on: ubuntu-latest 
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/pulsar-beam

      - name: Install dependencies
        run: |
          pwd
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}
          wget --user-agent=Mozilla "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.4.1/DEB/apache-pulsar-client.deb"
          wget --user-agent=Mozilla "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.4.1/DEB/apache-pulsar-client-dev.deb"
          ls ./*apache-pulsar-client*.deb
          sudo apt install ./*apache-pulsar-client*.deb
          go mod download
      - name: Install MongoDB
        run: |
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_EVENT_PATH
          sudo apt-get update
          sudo apt-get install -y mongodb
      - name: Verify MongoDB Installation and Status
        run: |
          ls /var/lib/mongodb
          sudo systemctl status mongodb
      - name: Set up root certificate
        env:
          PULSAR_CLIENT_CERT: ${{ secrets.PULSAR_CLIENT_CERT }}
        run: |
          pwd
          sudo apt-get install ca-certificates -y
          sudo mkdir -p /usr/local/share/ca-certificate
          echo $PULSAR_CLIENT_CERT | sed 's/\\n/\n/g' > ./pulsar-ca.crt
          sudo cp ./pulsar-ca.crt /usr/local/share/ca-certificate/pulsar-ca.crt
          ls /usr/local/share/ca-certificate
          sudo update-ca-certificates
          ls /etc/ssl/certs
      - name: Start daemon
        env:
          PORT: 3000
          PbDbInterval: 15s
          TrustStore: /etc/ssl/certs/ca-certificates.crt
          FN_SINK_TOPIC: ${{ secrets.FN_SINK_TOPIC }}
          PULSAR_TOKEN: ${{ secrets.PULSAR_TOKEN }}
          PULSAR_URI: ${{ secrets.PULSAR_URI }}
          REST_API_TOKEN: ${{ secrets.REST_API_TOKEN }}
          WEBHOOK2_URL: ${{ secrets.WEBHOOK2_URL }}
          WEBHOOK_TOPIC: ${{ secrets.WEBHOOK_TOPIC }}
        run: |
          sudo apt-get install -y net-tools
          ls -l /etc/ssl/certs/ca-certificates.crt
          pwd
          cd src
          go build -o main ./main.go
          ls
          ./main > ./beam.log &
          sleep 15
          sudo netstat -tulpn | grep LISTEN
          ls ./beam.log
          cat ./beam.log
          ps -eaf | grep "main"
          cd e2e
          pwd
          curl -v -H "Authorization: testkey" http://localhost:3000/status
          go run ./e2etest.go
          cat ../beam.log

  docker:
    name: docker
    runs-on: ubuntu-latest 
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/pulsar-beam

      - name: Build Docker Image
        run: |
          pwd
          sudo docker build -t pulsar-beam .